{"ast":null,"code":"import { db } from \"../../firebase/firebaseConfig\";\nimport { types } from \"../../types/types\";\nexport const viajesBusqueda = (viajes, imgPaquete) => ({\n  type: types.busqueda,\n  payload: {\n    viajes,\n    imgPaquete\n  }\n});\nexport const viajesBusquedaEmpty = () => ({\n  type: types.emptyBusqueda\n});\nexport const getViaje = ({\n  dirSalida,\n  dirDestino,\n  fechaEnvio,\n  pesoPaquete,\n  imgPaquete\n}) => {\n  return dispatch => {\n    const viajesRef = db.collection(\"viajes\");\n    viajesRef.where(\"salida\", \"==\", dirSalida).where(\"destino\", \"==\", dirDestino).where(\"fechaViaje\", \"==\", fechaEnvio).where(\"equipajePeso\", \">=\", pesoPaquete).get().then(viajes => {\n      if (!viajes.empty) {\n        let viajesData = [];\n        const precio = getPrecio(pesoPaquete);\n        viajes.docs.forEach(viaje => {\n          viajesData.push({ ...viaje.data(),\n            id: viaje.id,\n            precio,\n            peso_envio: pesoPaquete\n          });\n        });\n        dispatch(viajesBusqueda(viajesData, imgPaquete));\n      } else {\n        dispatch(viajesBusquedaEmpty());\n      }\n    });\n  };\n};\n\nconst getPrecio = peso => {\n  switch (true) {\n    case peso == 1:\n      return 85;\n\n    case peso > 1 && peso < 6:\n      return 150;\n\n    case peso > 6 && peso < 11:\n      return 250;\n\n    case peso > 11 && peso < 26:\n      return 350;\n  }\n};","map":{"version":3,"sources":["/Users/adrian/Desktop/mandadero/app/src/actions/mandadero/envio.js"],"names":["db","types","viajesBusqueda","viajes","imgPaquete","type","busqueda","payload","viajesBusquedaEmpty","emptyBusqueda","getViaje","dirSalida","dirDestino","fechaEnvio","pesoPaquete","dispatch","viajesRef","collection","where","get","then","empty","viajesData","precio","getPrecio","docs","forEach","viaje","push","data","id","peso_envio","peso"],"mappings":"AAAA,SAASA,EAAT,QAAmB,+BAAnB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,UAAT,MAAyB;AACrDC,EAAAA,IAAI,EAAEJ,KAAK,CAACK,QADyC;AAErDC,EAAAA,OAAO,EAAE;AAAEJ,IAAAA,MAAF;AAAUC,IAAAA;AAAV;AAF4C,CAAzB,CAAvB;AAKP,OAAO,MAAMI,mBAAmB,GAAG,OAAO;AACxCH,EAAAA,IAAI,EAAEJ,KAAK,CAACQ;AAD4B,CAAP,CAA5B;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAAC;AACvBC,EAAAA,SADuB;AAEvBC,EAAAA,UAFuB;AAGvBC,EAAAA,UAHuB;AAIvBC,EAAAA,WAJuB;AAKvBV,EAAAA;AALuB,CAAD,KAMlB;AACJ,SAAQW,QAAD,IAAc;AACnB,UAAMC,SAAS,GAAGhB,EAAE,CAACiB,UAAH,CAAc,QAAd,CAAlB;AACAD,IAAAA,SAAS,CACNE,KADH,CACS,QADT,EACmB,IADnB,EACyBP,SADzB,EAEGO,KAFH,CAES,SAFT,EAEoB,IAFpB,EAE0BN,UAF1B,EAGGM,KAHH,CAGS,YAHT,EAGuB,IAHvB,EAG6BL,UAH7B,EAIGK,KAJH,CAIS,cAJT,EAIyB,IAJzB,EAI+BJ,WAJ/B,EAKGK,GALH,GAMGC,IANH,CAMSjB,MAAD,IAAY;AAChB,UAAI,CAACA,MAAM,CAACkB,KAAZ,EAAmB;AACjB,YAAIC,UAAU,GAAG,EAAjB;AACA,cAAMC,MAAM,GAAGC,SAAS,CAACV,WAAD,CAAxB;AACAX,QAAAA,MAAM,CAACsB,IAAP,CAAYC,OAAZ,CAAqBC,KAAD,IAAW;AAC7BL,UAAAA,UAAU,CAACM,IAAX,CAAgB,EACd,GAAGD,KAAK,CAACE,IAAN,EADW;AAEdC,YAAAA,EAAE,EAAEH,KAAK,CAACG,EAFI;AAGdP,YAAAA,MAHc;AAIdQ,YAAAA,UAAU,EAAEjB;AAJE,WAAhB;AAMD,SAPD;AAQAC,QAAAA,QAAQ,CAACb,cAAc,CAACoB,UAAD,EAAalB,UAAb,CAAf,CAAR;AACD,OAZD,MAYO;AACLW,QAAAA,QAAQ,CAACP,mBAAmB,EAApB,CAAR;AACD;AACF,KAtBH;AAuBD,GAzBD;AA0BD,CAjCM;;AAmCP,MAAMgB,SAAS,GAAIQ,IAAD,IAAU;AAC1B,UAAQ,IAAR;AACE,SAAKA,IAAI,IAAI,CAAb;AACE,aAAO,EAAP;;AAEF,SAAKA,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,CAAxB;AACE,aAAO,GAAP;;AAEF,SAAKA,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,EAAxB;AACE,aAAO,GAAP;;AAEF,SAAKA,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,EAAzB;AACE,aAAO,GAAP;AAXJ;AAaD,CAdD","sourcesContent":["import { db } from \"../../firebase/firebaseConfig\";\nimport { types } from \"../../types/types\";\n\nexport const viajesBusqueda = (viajes, imgPaquete) => ({\n  type: types.busqueda,\n  payload: { viajes, imgPaquete },\n});\n\nexport const viajesBusquedaEmpty = () => ({\n  type: types.emptyBusqueda,\n});\nexport const getViaje = ({\n  dirSalida,\n  dirDestino,\n  fechaEnvio,\n  pesoPaquete,\n  imgPaquete,\n}) => {\n  return (dispatch) => {\n    const viajesRef = db.collection(\"viajes\");\n    viajesRef\n      .where(\"salida\", \"==\", dirSalida)\n      .where(\"destino\", \"==\", dirDestino)\n      .where(\"fechaViaje\", \"==\", fechaEnvio)\n      .where(\"equipajePeso\", \">=\", pesoPaquete)\n      .get()\n      .then((viajes) => {\n        if (!viajes.empty) {\n          let viajesData = [];\n          const precio = getPrecio(pesoPaquete);\n          viajes.docs.forEach((viaje) => {\n            viajesData.push({\n              ...viaje.data(),\n              id: viaje.id,\n              precio,\n              peso_envio: pesoPaquete,\n            });\n          });\n          dispatch(viajesBusqueda(viajesData, imgPaquete));\n        } else {\n          dispatch(viajesBusquedaEmpty());\n        }\n      });\n  };\n};\n\nconst getPrecio = (peso) => {\n  switch (true) {\n    case peso == 1:\n      return 85;\n\n    case peso > 1 && peso < 6:\n      return 150;\n\n    case peso > 6 && peso < 11:\n      return 250;\n\n    case peso > 11 && peso < 26:\n      return 350;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}