{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrian/Desktop/mandadero/app/src/components/Mandadero/checkout/CheckoutScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { CardElement, Elements, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { Header } from \"../Header\";\nimport { useForm } from \"../../../hooks/useForm\";\n\nconst checkoutForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\nexport const CheckoutScreen = () => {\n  _s();\n\n  const [stripePromise, setStripePromise] = useState(() => loadStripe(\"pk_test_51IM0XiG7x5PWYD6b6iBJqiMlwAPMkn4AtIuB277S90PoMRB4OcgDxC2p9CoiMKylgefN2aHmVbfVyLWTKaPCvtjO00fkrpuXKz\"));\n  const searchOptions = {\n    componentRestrictions: {\n      country: \"mx\"\n    }\n  };\n  const [{\n    notas\n  }, handleChange] = useForm({\n    notas: \"\"\n  });\n  const [direccion, setDireccion] = useState(\"\");\n\n  const handleChangeDireccion = address => {\n    setDireccion(address);\n  };\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      console.log(paymentMethod);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth__container\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pago\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-login\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            margin: \"15px 0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(GooglePlacesAutocomplete, {\n            autocompletionRequest: searchOptions,\n            selectProps: {\n              onChange: evt => handleChangeDireccion(evt),\n              placeholder: \"Direccion complementaria\",\n              getOptionLabel: option => {\n                return `${option.label}`;\n              },\n              styles: {\n                input: provided => ({ ...provided,\n                  color: \"black\"\n                }),\n                option: provided => ({ ...provided,\n                  color: \"black\"\n                }),\n                singleValue: provided => ({ ...provided,\n                  color: \"black\"\n                })\n              },\n              loadingMessage: () => \"Cargando\",\n              noOptionsMessage: () => \"Sin resultados\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            margin: \"20px 0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: \"100%\"\n            },\n            label: \"Notas adicionales\",\n            multiline: true,\n            rowsMax: 4,\n            name: \"notas\",\n            value: notas,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            margin: \"20px 0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Elements, {\n            stripe: stripePromise,\n            children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Pagar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CheckoutScreen, \"htOjq+eiZ1W2PnfgQ9HaIRotuNU=\", false, function () {\n  return [useForm, useStripe, useElements];\n});\n\n_c = CheckoutScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutScreen\");","map":{"version":3,"sources":["/Users/adrian/Desktop/mandadero/app/src/components/Mandadero/checkout/CheckoutScreen.js"],"names":["React","useState","GooglePlacesAutocomplete","TextField","Button","loadStripe","CardElement","Elements","useStripe","useElements","Header","useForm","checkoutForm","CheckoutScreen","stripePromise","setStripePromise","searchOptions","componentRestrictions","country","notas","handleChange","direccion","setDireccion","handleChangeDireccion","address","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","console","log","marginTop","width","margin","onChange","evt","placeholder","getOptionLabel","option","label","styles","input","provided","color","singleValue","loadingMessage","noOptionsMessage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  CardElement,\n  Elements,\n  useStripe,\n  useElements,\n} from \"@stripe/react-stripe-js\";\nimport { Header } from \"../Header\";\nimport { useForm } from \"../../../hooks/useForm\";\n\nconst checkoutForm = () => {\n  return (\n    <div>\n      <CardElement />\n    </div>\n  );\n};\n\nexport const CheckoutScreen = () => {\n  const [stripePromise, setStripePromise] = useState(() =>\n    loadStripe(\n      \"pk_test_51IM0XiG7x5PWYD6b6iBJqiMlwAPMkn4AtIuB277S90PoMRB4OcgDxC2p9CoiMKylgefN2aHmVbfVyLWTKaPCvtjO00fkrpuXKz\"\n    )\n  );\n\n  const searchOptions = {\n    componentRestrictions: {\n      country: \"mx\",\n    },\n  };\n\n  const [{ notas }, handleChange] = useForm({\n    notas: \"\",\n  });\n\n  const [direccion, setDireccion] = useState(\"\");\n\n  const handleChangeDireccion = (address) => {\n    setDireccion(address);\n  };\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n\n    if (!error) {\n      console.log(paymentMethod);\n    }\n  };\n  return (\n    <>\n      <Header />\n      <div className=\"auth__container\" style={{ marginTop: \"20px\" }}>\n        <h1>Pago</h1>\n        <form onSubmit={handleSubmit} className=\"form-login\">\n          <div style={{ width: \"100%\", margin: \"15px 0\" }}>\n            <GooglePlacesAutocomplete\n              autocompletionRequest={searchOptions}\n              selectProps={{\n                onChange: (evt) => handleChangeDireccion(evt),\n                placeholder: \"Direccion complementaria\",\n                getOptionLabel: (option) => {\n                  return `${option.label}`;\n                },\n                styles: {\n                  input: (provided) => ({\n                    ...provided,\n                    color: \"black\",\n                  }),\n                  option: (provided) => ({\n                    ...provided,\n                    color: \"black\",\n                  }),\n                  singleValue: (provided) => ({ ...provided, color: \"black\" }),\n                },\n                loadingMessage: () => \"Cargando\",\n                noOptionsMessage: () => \"Sin resultados\",\n              }}\n            />\n          </div>\n\n          <div style={{ width: \"100%\", margin: \"20px 0\" }}>\n            <TextField\n              style={{ width: \"100%\" }}\n              label=\"Notas adicionales\"\n              multiline\n              rowsMax={4}\n              name=\"notas\"\n              value={notas}\n              onChange={handleChange}\n            />\n          </div>\n          <div style={{ width: \"100%\", margin: \"20px 0\" }}>\n            <Elements stripe={stripePromise}>\n              <CardElement />\n            </Elements>\n          </div>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Pagar\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}