{"ast":null,"code":"import { types } from \"../types/types\";\nimport { firebase, db } from \"../firebase/firebaseConfig\";\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName\n  }\n});\nexport const startLoginEmailPassword = (email, password) => {\n  return dispatch => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(({\n      user\n    }) => {\n      dispatch(login(user.uid, user.displayName));\n    });\n  };\n};\nexport const startRegisterWithEmailPassword = (email, password, name, phone) => {\n  return dispatch => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(async ({\n      user\n    }) => {\n      await user.updateProfile({\n        displayName: name\n      });\n      db.collection(\"users\").doc(user.uid).set({\n        email,\n        name,\n        phone\n      }).then(() => {\n        dispatch(login(user.uid, name));\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/adrian/Desktop/mandadero/src/actions/auth.js"],"names":["types","firebase","db","login","uid","displayName","type","payload","startLoginEmailPassword","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","startRegisterWithEmailPassword","name","phone","createUserWithEmailAndPassword","updateProfile","collection","doc","set"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,EAAmBC,EAAnB,QAA6B,4BAA7B;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,GAAD,EAAMC,WAAN,MAAuB;AAC1CC,EAAAA,IAAI,EAAEN,KAAK,CAACG,KAD8B;AAE1CI,EAAAA,OAAO,EAAE;AACPH,IAAAA,GADO;AAEPC,IAAAA;AAFO;AAFiC,CAAvB,CAAd;AAQP,OAAO,MAAMG,uBAAuB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1D,SAAQC,QAAD,IAAc;AACnBV,IAAAA,QAAQ,CACLW,IADH,GAEGC,0BAFH,CAE8BJ,KAF9B,EAEqCC,QAFrC,EAGGI,IAHH,CAGQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBJ,MAAAA,QAAQ,CAACR,KAAK,CAACY,IAAI,CAACX,GAAN,EAAWW,IAAI,CAACV,WAAhB,CAAN,CAAR;AACD,KALH;AAMD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMW,8BAA8B,GAAG,CAC5CP,KAD4C,EAE5CC,QAF4C,EAG5CO,IAH4C,EAI5CC,KAJ4C,KAKzC;AACH,SAAQP,QAAD,IAAc;AACnBV,IAAAA,QAAQ,CACLW,IADH,GAEGO,8BAFH,CAEkCV,KAFlC,EAEyCC,QAFzC,EAGGI,IAHH,CAGQ,OAAO;AAAEC,MAAAA;AAAF,KAAP,KAAoB;AACxB,YAAMA,IAAI,CAACK,aAAL,CAAmB;AAAEf,QAAAA,WAAW,EAAEY;AAAf,OAAnB,CAAN;AACAf,MAAAA,EAAE,CAACmB,UAAH,CAAc,OAAd,EACGC,GADH,CACOP,IAAI,CAACX,GADZ,EAEGmB,GAFH,CAEO;AAAEd,QAAAA,KAAF;AAASQ,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAFP,EAGGJ,IAHH,CAGQ,MAAM;AACVH,QAAAA,QAAQ,CAACR,KAAK,CAACY,IAAI,CAACX,GAAN,EAAWa,IAAX,CAAN,CAAR;AACD,OALH;AAMD,KAXH;AAYD,GAbD;AAcD,CApBM","sourcesContent":["import { types } from \"../types/types\";\nimport { firebase, db } from \"../firebase/firebaseConfig\";\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n  },\n});\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n\nexport const startRegisterWithEmailPassword = (\n  email,\n  password,\n  name,\n  phone\n) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n        db.collection(\"users\")\n          .doc(user.uid)\n          .set({ email, name, phone })\n          .then(() => {\n            dispatch(login(user.uid, name));\n          });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}