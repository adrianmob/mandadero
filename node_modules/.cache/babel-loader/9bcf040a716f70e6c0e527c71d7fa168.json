{"ast":null,"code":"import { db } from \"../../firebase/firebaseConfig\";\nimport { types } from \"../../types/types\";\nexport const viajesBusqueda = viajes => ({\n  type: types.busqueda,\n  payload: viajes\n});\nexport const viajesBusquedaEmpty = () => ({\n  type: types.emptyBusqueda\n});\nexport const getViaje = ({\n  dirSalida,\n  dirDestino,\n  fechaEnvio,\n  pesoPaquete\n}) => {\n  return dispatch => {\n    const viajesRef = db.collection(\"viajes\");\n    viajesRef.where(\"salida\", \"==\", dirSalida).where(\"destino\", \"==\", dirDestino).where(\"fechaViaje\", \"==\", fechaEnvio).where(\"equipajePeso\", \">=\", pesoPaquete).get().then(viajes => {\n      if (!viajes.empty) {\n        let viajesData = [];\n        const precio = getPrecio(data.equipajePeso);\n        viajes.docs.forEach(viaje => {\n          const data = viaje.data();\n          console.log(precio);\n          viajesData.push({ ...data,\n            id: viaje.id,\n            precio\n          });\n        });\n        dispatch(viajesBusqueda(viajesData));\n      } else {\n        dispatch(viajesBusquedaEmpty());\n      }\n    });\n  };\n};\n\nconst getPrecio = peso => {\n  switch (true) {\n    case peso == 1:\n      return 85;\n\n    case peso > 1 && peso < 6:\n      return 150;\n\n    case peso > 6 && peso < 11:\n      return 250;\n\n    case peso > 11 && peso < 26:\n      return 350;\n  }\n};\n\nconst updateViaje = (id, peso) => {\n  return db.collection(\"viajes\").doc(id).update({\n    equipajePeso: peso\n  });\n};\n\nconst setEnvioViaje = body => {\n  return db.collection(\"envios\").doc().set(body);\n};","map":{"version":3,"sources":["/Users/adrian/Desktop/mandadero/app/src/actions/mandadero/envio.js"],"names":["db","types","viajesBusqueda","viajes","type","busqueda","payload","viajesBusquedaEmpty","emptyBusqueda","getViaje","dirSalida","dirDestino","fechaEnvio","pesoPaquete","dispatch","viajesRef","collection","where","get","then","empty","viajesData","precio","getPrecio","data","equipajePeso","docs","forEach","viaje","console","log","push","id","peso","updateViaje","doc","update","setEnvioViaje","body","set"],"mappings":"AAAA,SAASA,EAAT,QAAmB,+BAAnB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,cAAc,GAAIC,MAAD,KAAa;AACzCC,EAAAA,IAAI,EAAEH,KAAK,CAACI,QAD6B;AAEzCC,EAAAA,OAAO,EAAEH;AAFgC,CAAb,CAAvB;AAKP,OAAO,MAAMI,mBAAmB,GAAG,OAAO;AACxCH,EAAAA,IAAI,EAAEH,KAAK,CAACO;AAD4B,CAAP,CAA5B;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAAC;AACvBC,EAAAA,SADuB;AAEvBC,EAAAA,UAFuB;AAGvBC,EAAAA,UAHuB;AAIvBC,EAAAA;AAJuB,CAAD,KAKlB;AACJ,SAAQC,QAAD,IAAc;AACnB,UAAMC,SAAS,GAAGf,EAAE,CAACgB,UAAH,CAAc,QAAd,CAAlB;AACAD,IAAAA,SAAS,CACNE,KADH,CACS,QADT,EACmB,IADnB,EACyBP,SADzB,EAEGO,KAFH,CAES,SAFT,EAEoB,IAFpB,EAE0BN,UAF1B,EAGGM,KAHH,CAGS,YAHT,EAGuB,IAHvB,EAG6BL,UAH7B,EAIGK,KAJH,CAIS,cAJT,EAIyB,IAJzB,EAI+BJ,WAJ/B,EAKGK,GALH,GAMGC,IANH,CAMShB,MAAD,IAAY;AAChB,UAAI,CAACA,MAAM,CAACiB,KAAZ,EAAmB;AACjB,YAAIC,UAAU,GAAG,EAAjB;AACA,cAAMC,MAAM,GAAGC,SAAS,CAACC,IAAI,CAACC,YAAN,CAAxB;AAEAtB,QAAAA,MAAM,CAACuB,IAAP,CAAYC,OAAZ,CAAqBC,KAAD,IAAW;AAC7B,gBAAMJ,IAAI,GAAGI,KAAK,CAACJ,IAAN,EAAb;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEAD,UAAAA,UAAU,CAACU,IAAX,CAAgB,EAAE,GAAGP,IAAL;AAAWQ,YAAAA,EAAE,EAAEJ,KAAK,CAACI,EAArB;AAAyBV,YAAAA;AAAzB,WAAhB;AACD,SALD;AAMAR,QAAAA,QAAQ,CAACZ,cAAc,CAACmB,UAAD,CAAf,CAAR;AACD,OAXD,MAWO;AACLP,QAAAA,QAAQ,CAACP,mBAAmB,EAApB,CAAR;AACD;AACF,KArBH;AAsBD,GAxBD;AAyBD,CA/BM;;AAiCP,MAAMgB,SAAS,GAAIU,IAAD,IAAU;AAC1B,UAAQ,IAAR;AACE,SAAKA,IAAI,IAAI,CAAb;AACE,aAAO,EAAP;;AAEF,SAAKA,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,CAAxB;AACE,aAAO,GAAP;;AAEF,SAAKA,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,EAAxB;AACE,aAAO,GAAP;;AAEF,SAAKA,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,EAAzB;AACE,aAAO,GAAP;AAXJ;AAaD,CAdD;;AAgBA,MAAMC,WAAW,GAAG,CAACF,EAAD,EAAKC,IAAL,KAAc;AAChC,SAAOjC,EAAE,CAACgB,UAAH,CAAc,QAAd,EAAwBmB,GAAxB,CAA4BH,EAA5B,EAAgCI,MAAhC,CAAuC;AAAEX,IAAAA,YAAY,EAAEQ;AAAhB,GAAvC,CAAP;AACD,CAFD;;AAIA,MAAMI,aAAa,GAAIC,IAAD,IAAU;AAC9B,SAAOtC,EAAE,CAACgB,UAAH,CAAc,QAAd,EAAwBmB,GAAxB,GAA8BI,GAA9B,CAAkCD,IAAlC,CAAP;AACD,CAFD","sourcesContent":["import { db } from \"../../firebase/firebaseConfig\";\nimport { types } from \"../../types/types\";\n\nexport const viajesBusqueda = (viajes) => ({\n  type: types.busqueda,\n  payload: viajes,\n});\n\nexport const viajesBusquedaEmpty = () => ({\n  type: types.emptyBusqueda,\n});\nexport const getViaje = ({\n  dirSalida,\n  dirDestino,\n  fechaEnvio,\n  pesoPaquete,\n}) => {\n  return (dispatch) => {\n    const viajesRef = db.collection(\"viajes\");\n    viajesRef\n      .where(\"salida\", \"==\", dirSalida)\n      .where(\"destino\", \"==\", dirDestino)\n      .where(\"fechaViaje\", \"==\", fechaEnvio)\n      .where(\"equipajePeso\", \">=\", pesoPaquete)\n      .get()\n      .then((viajes) => {\n        if (!viajes.empty) {\n          let viajesData = [];\n          const precio = getPrecio(data.equipajePeso);\n\n          viajes.docs.forEach((viaje) => {\n            const data = viaje.data();\n            console.log(precio);\n\n            viajesData.push({ ...data, id: viaje.id, precio });\n          });\n          dispatch(viajesBusqueda(viajesData));\n        } else {\n          dispatch(viajesBusquedaEmpty());\n        }\n      });\n  };\n};\n\nconst getPrecio = (peso) => {\n  switch (true) {\n    case peso == 1:\n      return 85;\n\n    case peso > 1 && peso < 6:\n      return 150;\n\n    case peso > 6 && peso < 11:\n      return 250;\n\n    case peso > 11 && peso < 26:\n      return 350;\n  }\n};\n\nconst updateViaje = (id, peso) => {\n  return db.collection(\"viajes\").doc(id).update({ equipajePeso: peso });\n};\n\nconst setEnvioViaje = (body) => {\n  return db.collection(\"envios\").doc().set(body);\n};\n"]},"metadata":{},"sourceType":"module"}